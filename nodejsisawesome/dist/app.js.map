{"version":3,"sources":["../src/app.js"],"names":["app","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","then","console","log","formattedData","Object","keys","data","forEach","dataKey","score","hot","get","req","res","listen","process","env","PORT","port","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,oBAAK;AACXC,kBAAgB,iBAAOC;AADZ,CAAL,CAAR;;AAIAL,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB;AACtBC,SAAO,iBAAOC;AADQ,CAAhB,CAAR;;AAIA;AACA,kBAAa,cAAM;;AAEjB,2BAAYC,IAAZ,CAAiB,gBAAQ;AACvBC,YAAQC,GAAR,CAAY,iBAAZ;AACJ;AACI,QAAMC,gBAAgB,EAAtB;AACAC,WAAOC,IAAP,CAAYC,IAAZ,EAAkBC,OAAlB,CAA0B,mBAAW;AACnCJ,oBAAcK,OAAd,IAAyB;AACvBC,eAAOH,KAAKE,OAAL,EAAcC,KADE;AAEvBC,aAAKJ,KAAKE,OAAL,EAAcC,KAAd,GAAsB;AAFJ,OAAzB;AAID,KALD;AAMAlB,QAAIoB,GAAJ,CAAQ,MAAR,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClCA,UAAIhB,IAAJ,CAASM,aAAT;AACD,KAFD;;AAIAZ,QAAIC,MAAJ,CAAWsB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C,EAAmD,YAAM;AACvDjB,cAAQC,GAAR,sBAA+BX,IAAIC,MAAJ,CAAW2B,OAAX,GAAqBD,IAApD;AACD,KAFD;AAGD,GAjBD;AAkBD,CApBD;;kBAsBe3B,G","file":"app.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport initializeDb from './db';\r\nimport config from './config';\r\nimport dataFetcher from './api/scripts/importNewsToDb';\r\n\r\nlet app = express();\r\napp.server = http.createServer(app);\r\n\r\n// logger\r\napp.use(morgan('dev'));\r\n\r\n// 3rd party middleware\r\napp.use(cors({\r\n  exposedHeaders: config.corsHeaders\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n  limit: config.bodyLimit\r\n}));\r\n\r\n// connect to db\r\ninitializeDb(db => {\r\n\r\n  dataFetcher.then(data => {\r\n    console.log('data is fetched');\r\n// api router\r\n    const formattedData = {};\r\n    Object.keys(data).forEach(dataKey => {\r\n      formattedData[dataKey] = {\r\n        score: data[dataKey].score,\r\n        hot: data[dataKey].score > 1\r\n      };\r\n    });\r\n    app.get('/api', function (req, res) {\r\n      res.json(formattedData);\r\n    });\r\n\r\n    app.server.listen(process.env.PORT || config.port, () => {\r\n      console.log(`Started on port ${app.server.address().port}`);\r\n    });\r\n  });\r\n});\r\n\r\nexport default app;"]}